---
- name: Determine latest tomcat build for given version.
  script: tomcat_find_latest_version.py {{ tomcat_version }}
  register: tomcat_download_link

- debug:
    msg: "{{ tomcat_download_link.stdout.strip().split('/')[-1] }}"

# get exact archivename from prev step and use it here.
- name: Download tomcat_distro.
  get_url:
    url: "{{ tomcat_download_link.stdout.split() }}"
    dest: "/tmp/{{ tomcat_download_link.stdout.strip().split('/')[-1] }}" 
    mode: 0440
        
- name: Untar tomcat. 
  unarchive:
    src: "/tmp/apache-tomcat-{{tomcat_version}}.tar.gz"
    dest: "{{ tomcat_dir }}"
    remote_src: True
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    mode: 0755

- name: Create systemd file for tomcat.
  template:
    src: tomcat.service.j2
    dest: "/etc/systemd/system/tomcat.service"
    owner: root
    group: root
    force: yes
    mode: 0644
  when: ansible_service_mgr == 'systemd'

- name: Setup tomcat manager interface (tomcat_users).
  template:
    src: tomcat_users.j2
    dest: "{{ tomcat_dir }}/conf/tomcat-users.xml"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    force: yes
    mode: 0644

- name: Setup tomcat manager interface (manager context).
  template:
    src: manager_context.j2
    dest: "{{ tomcat_dir }}/webapps/manager/META-INF/context.xml"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    force: yes
    mode: 0644

- name: Add firewall exception. If firewall is on.
  firewalld: port=8080/tcp permanent=true state=enabled immediate=yes
  ignore_errors: yes
    
- name: Start and enable tomcat for systemd.
  systemd:
    state: started
    name: tomcat
    daemon_reload: yes
    enabled: yes
  when: ansible_service_mgr == 'systemd'

#Currently bug sort of https://github.com/ansible/ansible/issues/30192
- name: Start and enable tomcat for sysvinit.
  command: service tomcat start && checkonfig tomcat on
  when: ansible_service_mgr == 'sysvinit'
